/**
 * Copyright 2017 Atos
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
package eu.atos.sla.datamodel;

import java.util.Date;
import java.util.UUID;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.MappedSuperclass;
import javax.persistence.Temporal;


@MappedSuperclass
@Access(AccessType.FIELD)
public abstract class ECompensation<T> extends AbstractEntity<T> {

    /**
     * TODO
     */
    public class IReward extends ECompensation<IReward> {
        
    }
    
    @Column(name = "uuid")
    private String uuid;

    @Column(name = "agreement_id")
    private String agreementId;
    
    @Column(name = "datetime")
    @Temporal(javax.persistence.TemporalType.TIMESTAMP)
    private Date datetime;

    @Column(name = "kpi_name")
    private String kpiName;
    
    public ECompensation() {
        uuid = "";
        
        agreementId = "";
        datetime = new Date(0);
        kpiName = "";
    }
    
    /**
     * Creates a new Compensation with autogenerated uuid.
     */
    public ECompensation(String agreementId, Date datetime, String kpiName) {

        checkNotNull(agreementId, "agreementId");
        checkNotNull(datetime, "datetime");
        checkNotNull(kpiName, "kpiName");
        
        this.agreementId = agreementId;
        this.datetime = datetime;
        this.kpiName = kpiName;

        this.uuid = UUID.randomUUID().toString();
    }
    
    private void checkNotNull(Object o, String property) {
        if (o == null) {
            throw new NullPointerException(property + " cannot be null");
        }
    }

    /**
     * Internal generated UUID. The interested external parties are going to
     * identify this violation by the UUID.
     */
    public String getUuid() {
        
        return uuid;
    }

    /**
     * AgreementId where this compensation has been enforced.
     */
    public String getAgreementId() {
        
        return agreementId;
    }

    /**
     * Date and time when the compensation was raised.
     */
    public Date getDatetime() {
        
        return datetime;
    }
    
   /**
    * Name of the kpi that has generated this compensation.
    */
    public String getKpiName() {
        return kpiName;
    }
    
    @Override
    public String toString() {
        return String.format(
                "Compensation [uuid=%s, agreementId=%s, datetime=%s, kpiName=%s]", 
                uuid, agreementId, datetime, kpiName);
    }
}
